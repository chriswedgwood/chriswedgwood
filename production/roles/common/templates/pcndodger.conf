upstream app_server {
    server unix:{{app_dir}}/run/gunicorn.sock fail_timeout=0; 
}

server{
        listen 80;
        server_name peoplevsparkingtickets.co.uk www.peoplevsparkingtickets.co.uk;
        return 301 https://www.peoplevsparkingtickets.co.uk$request_uri;
}

server {
    access_log /var/log/nginx/{{ app_name }}-access.log;
    error_log /var/log/nginx/{{ app_name }}-error.log info;

    keepalive_timeout 5;

    # path for staticfiles
    location /static {
            autoindex on;
            alias {{ app_dir }}/staticfiles/;
    }

    location / {
                try_files $uri @proxy_to_app;
                    }

    location @proxy_to_app {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Host $http_host;
      # we don't want nginx trying to do something clever with
      # redirects, we set the Host: header above already.
      proxy_redirect off;
      proxy_pass http://app_server;
    }
    
    listen 443 default ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/peoplevsparkingtickets.co.uk/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/peoplevsparkingtickets.co.uk/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


}

